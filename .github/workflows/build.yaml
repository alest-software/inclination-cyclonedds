name: Build CycloneDDS

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  CPACK_PACKAGING_INSTALL_PREFIX: /opt/cyclonedds
  CYCLONEDDS_HOME: /opt/cyclonedds

jobs:
  cyclonedds:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-24.04, ubuntu-22.04-arm, ubuntu-24.04-arm]

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Clone external project
      run: |
        git clone --depth 1 https://github.com/eclipse-cyclonedds/cyclonedds.git
        cd cyclonedds

    - name: Set-up dependancies
      run: |
        sudo apt update
        sudo apt install -y build-essential cmake

    - name: Build from source
      working-directory: ./cyclonedds
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
        cpack -G DEB

    - name: Deploy to repository
      run: |
        codename=$(lsb_release -c -s)
        git clone --depth 1 https://x-access-token:${{ secrets.TOKEN }}@github.com/alest-software/ubuntu.git
        for fn in cyclonedds/build/*.deb; do
          arch=$(dpkg --info ${fn} | awk '/Architecture:/ {print $2}')
          fname=$(basename ${fn})
          dest="dists/$codename/main/binary-$arch"
          mkdir -p "ubuntu/${dest}"
          cp "${fn}" "ubuntu/${dest}/${fname}"
          (cd ubuntu; git add "${dest}/${fname}")
        done
        cd ubuntu
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git commit -m 'Automatic deployment' || echo 'Nothing to commit'
        git push
        

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: eclipse-cyclone-dds-${{ matrix.platform }}
        path: cyclonedds/build/*.deb

  cyclonedds-python:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-24.04, ubuntu-22.04-arm]
        python-version: ["3.10"]
        
    runs-on: ${{ matrix.platform }}
    
    needs: cyclonedds
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: eclipse-cyclone-dds-${{ matrix.platform }}
        path: artifacts
        
    - name: Clone
      run: |
        git clone --depth 1 https://github.com/eclipse-cyclonedds/cyclonedds-python.git
        cd cyclonedds-python
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Set up dependencies
      run: |
        sudo apt update
        sudo apt install -y gh
        sudo apt install -y ./artifacts/*.deb
        python -m pip install --upgrade pip
        pip install build
        
    - name: Build
      run: |
        cd cyclonedds-python
        python -m build \
          -C--global-option=egg_info \
          -C--global-option=--tag-build="`date '+%Y%m%d'`-${{github.run_number}}" \
          --sdist --wheel
        
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: eclipse-cyclone-dds-python-${{ matrix.platform }}
        path: cyclonedds-python/dist/*
        
    - name: Deployment
      run: |
        gh auth status
        cd cyclonedds-python/dist
        for fn in *.whl; do
          base64 -w 0 ${fn} > content.b64
          jq -n --arg message "GitHub Action" --rawfile content content.b64 '{message: $message, content: $content}' > upload.json
          gh api -X PUT "/repos/alest-software/simple/contents/cyclonedds/${fn}" --input upload.json
        done

