name: Build CycloneDDS

on:
#  schedule:
#    - cron: '0 3 1 * *'
  workflow_dispatch:

env:
  #GITHUB_UPLOAD_REPO: ${{ vars.UPLOAD_REPO }}
  #GITHUB_UPLOAD_OWNER: ${{ vars.UPLOAD_OWNER }}
  #GITHUB_UPLOAD_PATH: ${{ vars.UPLOAD_PATH }}
  #GITHUB_UPLOAD_NAME: ${{ secrets.UPLOAD_NAME }}
  #GITHUB_UPLOAD_EMAIL: ${{ secrets.UPLOAD_EMAIL }}
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  CYCLONEDDS_HOME: /opt/inclination

jobs:
  cyclonedds:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-24.04, ubuntu-22.04-arm]

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Clone
      run: |
        git clone --depth 1 https://github.com/eclipse-cyclonedds/cyclonedds.git
        cd cyclonedds

    - name: Set up dependancies
      run: |
        sudo apt update
        sudo apt install -y build-essential cmake

    - name: Build
      working-directory: ./cyclonedds
      run: |
        mkdir build
        cd build
        cmake -DCPACK_PACKAGING_INSTALL_PREFIX=/opt/inclination ..
        cmake --build .
        cpack -G DEB
        #find . -name '*.deb' -exec dpkg -c {} \;

    - name: Deploy
      run: |
        codename=$(lsb_release -c -s)
        git clone --depth 1 https://github.com/alest-software/apt.git
        for fn in cyclonedds/build/*.deb; do
          arch=$(dpkg --info ${fn} | awk '/Architecture:/ {print $2}')
          fname=$(basename ${fn})
          dest="dists/$codename/main/binary-$arch"
          mkdir -p "apt/${dest}"
          cp "${fn}" "apt/${dest}/${fname}"
          (cd apt; git add "${dest}/${fname}")
        done
        cd apt
        git commit -m 'Automatic deployment'
        git push
        

#    - name: Upload
#      uses: actions/upload-artifact@v4
#      with:
#        name: eclipse-cyclone-dds-${{ matrix.arch }}
#        path: cyclonedds/build/*.deb

#  cyclonedds-python:
#    strategy:
#      fail-fast: false
#      matrix:
#        arch: [x64, arm64]
#        python-version: ["3.10"]
#    runs-on: ${{ matrix.arch == 'x64' && 'ubuntu-latest' || 'ubuntu-22.04-arm' }}
#    needs: cyclonedds
#    steps:
#    - name: Download artifacts
#       uses: actions/download-artifact@v4
#       with:
#         name: eclipse-cyclone-dds-${{ matrix.arch }}
#         path: artifacts
#    - name: Clone
#      run: |
#        git clone --depth 1 https://github.com/eclipse-cyclonedds/cyclonedds-python.git
#        cd cyclonedds-python
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v5
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Set up dependencies
#      run: |
#        sudo apt update
#        sudo apt install -y gh
#        sudo apt install -y ./artifacts/*.deb
#        python -m pip install --upgrade pip
#        pip install build
#    - name: Build
#      run: |
#        cd cyclonedds-python
#        python -m build -C--global-option=egg_info -C--global-option=--tag-build="`date '+%Y%m%d'`-${{github.run_number}}" --sdist --wheel
#    - name: Upload
#      uses: actions/upload-artifact@v4
#      with:
#        name: eclipse-cyclone-dds-python-${{ matrix.arch }}
#        path: cyclonedds-python/dist/*
#    - name: Deployment
#      run: |
#        gh auth status
#        cd cyclonedds-python/dist
#        for fn in *.whl; do \
#          base64 -w 0 ${fn} > content.b64; \
#          jq -n --arg message "GitHub Action" --rawfile content content.b64 '{message: $message, content: $content}' > upload.json; \
#          gh api -X PUT "/repos/alest-software/simple/contents/cyclonedds/${fn}" --input upload.json; \
#        done

